// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_state_management_example/test/counter_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter/foundation.dart' as _i2;
import 'package:flutter_state_management_example/conductors/local-storage-conductor.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeValueNotifier_0<T> extends _i1.SmartFake
    implements _i2.ValueNotifier<T> {
  _FakeValueNotifier_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocalStorageConductor].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageConductor extends _i1.Mock
    implements _i3.LocalStorageConductor {
  @override
  _i2.ValueNotifier<bool> get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: _FakeValueNotifier_0<bool>(
          this,
          Invocation.getter(#isInitialized),
        ),
        returnValueForMissingStub: _FakeValueNotifier_0<bool>(
          this,
          Invocation.getter(#isInitialized),
        ),
      ) as _i2.ValueNotifier<bool>);

  @override
  _i4.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> save(
    String? storeName,
    Map<String, dynamic>? map,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #save,
          [
            storeName,
            map,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<Map<String, dynamic>> load(String? storeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #load,
          [storeName],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);
}
